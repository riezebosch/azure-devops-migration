{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","useState","azureDevopsToken","setAzureDevopsToken","azureDevOpsOrganization","setAzureDevOpsOrganization","azureDevOpsAreaPath","setAzureDevOpsAreaPath","gitHubToken","setGitHubToken","loading","setLoading","error","setError","className","Box","width","Card","CardContent","Typography","style","fontSize","color","gutterBottom","onSubmit","e","preventDefault","axios","post","azureDevOps","token","organization","areaPath","github","then","r","data","runtimeStatus","catch","x","toString","finally","TextField","label","id","value","required","fullWidth","onChange","currentTarget","helperText","Link","href","target","rel","data-testid","Button","disabled","includes","type","Snackbar","open","autoHideDuration","onClose","Alert","severity","CircularProgress","ReactDOM","render","document","getElementById"],"mappings":"qUAuKeA,MAtJf,WAAgB,IAAD,EACmCC,mBAAS,IAD5C,mBACNC,EADM,KACYC,EADZ,OAEiDF,mBAAS,IAF1D,mBAENG,EAFM,KAEmBC,EAFnB,OAGyCJ,mBAAS,IAHlD,mBAGNK,EAHM,KAGeC,EAHf,OAIyBN,mBAAS,IAJlC,mBAINO,EAJM,KAIOC,EAJP,OAKiBR,oBAAS,GAL1B,mBAKNS,EALM,KAKGC,EALH,OAMaV,mBAAS,IANtB,mBAMNW,EANM,KAMCC,EAND,KAQb,OACE,yBAAKC,UAAU,OACb,4BAAQA,UAAU,cAChB,kBAACC,EAAA,EAAD,CAAKC,MAAO,IACV,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACEC,MAAO,CAAEC,SAAU,IACnBC,MAAM,gBACNC,cAAY,GAHd,2EAQA,0BACEC,SAAU,SAAAC,GACRA,EAAEC,iBACFf,GAAW,GACXgB,IACGC,KAAK,gDAAiD,CACrDC,YAAa,CACXC,MAAO5B,EACP6B,aAAc3B,EACd4B,SAAU1B,GAEZ2B,OAAQ,CACNH,MAAOtB,KAGV0B,MAAK,SAAAC,GAAC,YACqB,YAA1B,UAAAA,EAAEC,YAAF,eAAQC,eACJxB,EAAS,mBACTA,EAAS,OAEdyB,OAAM,SAAAC,GAAC,OAAI1B,EAAS0B,EAAEC,eACtBC,SAAQ,kBAAM9B,GAAW,QAG9B,kBAAC+B,EAAA,EAAD,CACEC,MAAM,eACNC,GAAG,4BACHC,MAAOzC,EACP0C,UAAU,EACVC,WAAS,EACTC,SAAU,SAAAT,GAAC,OACTlC,EAA2BkC,EAAEU,cAAcJ,UAG/C,kBAACH,EAAA,EAAD,CACEC,MAAM,qBACNC,GAAG,qBACHC,MAAO3C,EACP8C,SAAU,SAAAT,GAAC,OAAIpC,EAAoBoC,EAAEU,cAAcJ,QACnDC,UAAU,EACVC,WAAS,EACTG,WACE,4DAEE,kBAACC,EAAA,EAAD,CACEC,KACE,0BAC6B,KAA5BhD,EACGA,EAA0B,yBAC1B,IAENiD,OAAO,SACPC,IAAI,sBACJC,cAAY,0BAEZ,kBAAC,IAAD,CAAYnC,MAAO,CAAEC,SAAU,UAKvC,kBAACqB,EAAA,EAAD,CACEC,MAAM,YACNC,GAAG,wBACHC,MAAOvC,EACPwC,UAAU,EACVC,WAAS,EACTC,SAAU,SAAAT,GAAC,OAAIhC,EAAuBgC,EAAEU,cAAcJ,QACtDK,WAAW,gDAEb,kBAACR,EAAA,EAAD,CACEC,MAAM,eACNC,GAAG,eACHC,MAAOrC,EACPsC,UAAU,EACVC,WAAS,EACTC,SAAU,SAAAT,GAAC,OAAI9B,EAAe8B,EAAEU,cAAcJ,QAC9CK,WACE,uDAEE,kBAACC,EAAA,EAAD,CACEC,KAAK,qCACLC,OAAO,SACPC,IAAI,uBAEJ,kBAAC,IAAD,CAAYlC,MAAO,CAAEC,SAAU,UAKvC,kBAACmC,EAAA,EAAD,CACEC,SACE/C,GACA,CACER,EACAE,EACAE,EACAE,GACAkD,SAAS,IAEbC,KAAK,UAVP,WAkBR,kBAACC,EAAA,EAAD,CACEC,KAAgB,KAAVjD,EACNkD,iBAAkB,IAClBC,QAAS,kBAAMlD,EAAS,KACxB0C,cAAY,SAEZ,kBAACS,EAAA,EAAD,CAAOC,SAAS,SAASrD,IAE3B,kBAACgD,EAAA,EAAD,CACEC,KAAMnD,EACNoD,iBAAkB,IAClBC,QAAS,kBAAMpD,GAAW,IAC1B4C,cAAY,WAEZ,kBAACW,EAAA,EAAD,UC3JVC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.69b055a2.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport \"./App.css\";\nimport axios from \"axios\";\nimport {\n  Button,\n  TextField,\n  Card,\n  Snackbar,\n  CircularProgress,\n  CardContent,\n  Box,\n  Link,\n  Typography\n} from \"@material-ui/core\";\nimport { Alert } from \"@material-ui/lab\";\nimport LaunchIcon from \"@material-ui/icons/Launch\";\n\nfunction App() {\n  const [azureDevopsToken, setAzureDevopsToken] = useState(\"\");\n  const [azureDevOpsOrganization, setAzureDevOpsOrganization] = useState(\"\");\n  const [azureDevOpsAreaPath, setAzureDevOpsAreaPath] = useState(\"\");\n  const [gitHubToken, setGitHubToken] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Box width={1 / 2}>\n          <Card>\n            <CardContent>\n              <Typography\n                style={{ fontSize: 14 }}\n                color=\"textSecondary\"\n                gutterBottom\n              >\n                Import the first 50 product backlog items from Azure DevOps into\n                GitHub\n              </Typography>\n              <form\n                onSubmit={e => {\n                  e.preventDefault(); // prevent from onSubmit errors in tests\n                  setLoading(true);\n                  axios\n                    .post(\"https://azdo2gh.azurewebsites.net/api/migrate\", {\n                      azureDevOps: {\n                        token: azureDevopsToken,\n                        organization: azureDevOpsOrganization,\n                        areaPath: azureDevOpsAreaPath\n                      },\n                      github: {\n                        token: gitHubToken\n                      }\n                    })\n                    .then(r =>\n                      r.data?.runtimeStatus === \"Failed\"\n                        ? setError(\"function failed\")\n                        : setError(\"\")\n                    )\n                    .catch(x => setError(x.toString()))\n                    .finally(() => setLoading(false));\n                }}\n              >\n                <TextField\n                  label=\"organization\"\n                  id=\"azure-devops-organization\"\n                  value={azureDevOpsOrganization}\n                  required={true}\n                  fullWidth\n                  onChange={x =>\n                    setAzureDevOpsOrganization(x.currentTarget.value)\n                  }\n                />\n                <TextField\n                  label=\"azure devops token\"\n                  id=\"azure-devops-token\"\n                  value={azureDevopsToken}\n                  onChange={x => setAzureDevopsToken(x.currentTarget.value)}\n                  required={true}\n                  fullWidth\n                  helperText={\n                    <span>\n                      scope: Work Item (Read)&nbsp;\n                      <Link\n                        href={\n                          \"https://dev.azure.com/\" +\n                          (azureDevOpsOrganization !== \"\"\n                            ? azureDevOpsOrganization + \"/_usersSettings/tokens\"\n                            : \"\")\n                        }\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                        data-testid=\"azure-devops-token-url\"\n                      >\n                        <LaunchIcon style={{ fontSize: 12 }} />\n                      </Link>\n                    </span>\n                  }\n                />\n                <TextField\n                  label=\"area path\"\n                  id=\"azure-devops-areapath\"\n                  value={azureDevOpsAreaPath}\n                  required={true}\n                  fullWidth\n                  onChange={x => setAzureDevOpsAreaPath(x.currentTarget.value)}\n                  helperText=\"query product backlog items under area path\"\n                />\n                <TextField\n                  label=\"github token\"\n                  id=\"github-token\"\n                  value={gitHubToken}\n                  required={true}\n                  fullWidth\n                  onChange={x => setGitHubToken(x.currentTarget.value)}\n                  helperText={\n                    <span>\n                      scope: public_repo&nbsp;\n                      <Link\n                        href=\"https://github.com/settings/tokens\"\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                      >\n                        <LaunchIcon style={{ fontSize: 12 }} />\n                      </Link>\n                    </span>\n                  }\n                />\n                <Button\n                  disabled={\n                    loading ||\n                    [\n                      azureDevopsToken,\n                      azureDevOpsOrganization,\n                      azureDevOpsAreaPath,\n                      gitHubToken\n                    ].includes(\"\")\n                  }\n                  type=\"submit\"\n                >\n                  Go!\n                </Button>\n              </form>\n            </CardContent>\n          </Card>\n        </Box>\n        <Snackbar\n          open={error !== \"\"}\n          autoHideDuration={6000}\n          onClose={() => setError(\"\")}\n          data-testid=\"error\"\n        >\n          <Alert severity=\"error\">{error}</Alert>\n        </Snackbar>\n        <Snackbar\n          open={loading}\n          autoHideDuration={6000}\n          onClose={() => setLoading(false)}\n          data-testid=\"loading\"\n        >\n          <CircularProgress />\n        </Snackbar>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}